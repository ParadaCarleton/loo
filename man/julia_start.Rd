% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/julia.R
\name{julia_start}
\alias{julia_start}
\title{Use Julia for fast LOO calculations}
\usage{
julia_start(cores = getOption("mc.cores", parallel::detectCores()))
}
\arguments{
\item{cores}{The number of threads used when initializing Julia; we recommend
using one thread per CPU core (whether real or virtual). Defaults to the
number of CPU cores.}
}
\description{
The \code{julia_setup} function allows for LOO calculations to be completed in
Julia instead of R. Julia is a just-in-time compiled language designed
from the ground up to achieve high performance in numerical, scientific, and
statistical computations without sacrificing on ease-of-use or readability.
Note that \code{julia_setup} will incur a one-time cost to compile the \code{loo}
function the first time it is run. Although we are working on improvements,
compilation time can be significant, and as a result, \code{julia_setup} may not
be worth it when comparing a handful of models trained on small samples. With
large sample sizes, many draws from the posterior distribution, or more ,
Julia may be significantly faster.
}
\details{
If you would like to avoid waiting for compilation to complete every time you
use LOO, you can create a precompiled binary with
\href{https://github.com/JuliaLang/PackageCompiler.jl}{PackageCompiler.jl}
}
